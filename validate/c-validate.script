#!/bin/bash

echo "Mumps Compiler validation routines"

chmod u+x *.mps
chmod u+x *.m

rm -f key.dat data.dat

echo " misc tests"

mumpsc checkout.mps
./checkout < checkout.input

if (($? > 0)); then echo "execution error"; exit; fi

echo " local $order tests"

mumpsc lclOrder.mps
./lclOrder

if (($? > 0)); then echo "execution error"; exit; fi

echo " perl backref test"

mumpsc backref.mps
./backref < backref.input

if (($? > 0)); then echo "execution error"; exit; fi

echo " functions test"

mumpsc fcns.mps
./fcns < fcns.input

if (($? > 0)); then echo "execution error"; exit; fi

echo " for loop tests"

mumpsc for1.mps
./for1

if (($? > 0)); then echo "execution error"; exit; fi

mumpsc for2.mps
./for2

if (($? > 0)); then echo "execution error"; exit; fi

mumpsc for3.mps
./for3

if (($? > 0)); then echo "execution error"; exit; fi

echo " operator tests"

mumpsc ops.mps
./ops

if (($? > 0)); then echo "execution error"; exit; fi

echo " goto and do tests"

mumpsc go1.mps
./go1

if (($? > 0)); then echo "execution error"; exit; fi

echo " subroutine tests"

#cp s6.m s6.mps
#mumpsc s6.mps
#./s6

if (($? > 0)); then echo "execution error"; exit; fi

echo " global stress test"

rm key.dat data.dat

mumpsc globals1.mps
./globals1

if (($? > 0)); then echo "execution error"; exit; fi

echo " zfunctions test"

rm key.dat data.dat

mumpsc zfunctions.mps
./zfunctions

if (($? > 0)); then echo "execution error"; exit; fi

rm -f tmpI.tmp tmp.tmp
rm -f key.dat data.dat
